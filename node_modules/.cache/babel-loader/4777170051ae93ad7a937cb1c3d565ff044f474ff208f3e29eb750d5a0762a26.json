{"ast":null,"code":"import axios from 'axios';\nconst CONTRACT_ADDRESS = 'terra1m58hc296srr6xygrrfyu6u0e32pl8d459nfs55pmegke8zlv94rqsjz882';\nconst LCD_BASE_URL = 'https://lcd.terra.dev';\nexport async function fetchTokenInfo() {\n  try {\n    var _response$data;\n    const queryMsg = {\n      token_info: {}\n    };\n    const response = await axios.get(`${LCD_BASE_URL}/wasm/contracts/${CONTRACT_ADDRESS}/store`, {\n      params: {\n        query_msg: JSON.stringify(queryMsg)\n      }\n    });\n    const tokenInfo = (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.data;\n    return {\n      name: tokenInfo.name,\n      symbol: tokenInfo.symbol,\n      decimals: tokenInfo.decimals,\n      total_supply: tokenInfo.total_supply,\n      burned_supply: null,\n      circulating_supply: null,\n      max_supply: null\n    };\n  } catch (error) {\n    console.error('Failed to fetch token info:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["axios","CONTRACT_ADDRESS","LCD_BASE_URL","fetchTokenInfo","_response$data","queryMsg","token_info","response","get","params","query_msg","JSON","stringify","tokenInfo","data","name","symbol","decimals","total_supply","burned_supply","circulating_supply","max_supply","error","console"],"sources":["C:/Users/joshr/OneDrive/Desktop/catwifhat-website/src/api/tokenApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst CONTRACT_ADDRESS = 'terra1m58hc296srr6xygrrfyu6u0e32pl8d459nfs55pmegke8zlv94rqsjz882';\nconst LCD_BASE_URL = 'https://lcd.terra.dev';\n\nexport async function fetchTokenInfo() {\n  try {\n    const queryMsg = { token_info: {} };\n\n    const response = await axios.get(\n      `${LCD_BASE_URL}/wasm/contracts/${CONTRACT_ADDRESS}/store`,\n      {\n        params: {\n          query_msg: JSON.stringify(queryMsg),\n        },\n      }\n    );\n\n    const tokenInfo = response.data?.data;\n\n    return {\n      name: tokenInfo.name,\n      symbol: tokenInfo.symbol,\n      decimals: tokenInfo.decimals,\n      total_supply: tokenInfo.total_supply,\n      burned_supply: null,\n      circulating_supply: null,\n      max_supply: null,\n    };\n  } catch (error) {\n    console.error('Failed to fetch token info:', error);\n    throw error;\n  }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,gBAAgB,GAAG,kEAAkE;AAC3F,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,eAAeC,cAAcA,CAAA,EAAG;EACrC,IAAI;IAAA,IAAAC,cAAA;IACF,MAAMC,QAAQ,GAAG;MAAEC,UAAU,EAAE,CAAC;IAAE,CAAC;IAEnC,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAC9B,GAAGN,YAAY,mBAAmBD,gBAAgB,QAAQ,EAC1D;MACEQ,MAAM,EAAE;QACNC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACP,QAAQ;MACpC;IACF,CACF,CAAC;IAED,MAAMQ,SAAS,IAAAT,cAAA,GAAGG,QAAQ,CAACO,IAAI,cAAAV,cAAA,uBAAbA,cAAA,CAAeU,IAAI;IAErC,OAAO;MACLC,IAAI,EAAEF,SAAS,CAACE,IAAI;MACpBC,MAAM,EAAEH,SAAS,CAACG,MAAM;MACxBC,QAAQ,EAAEJ,SAAS,CAACI,QAAQ;MAC5BC,YAAY,EAAEL,SAAS,CAACK,YAAY;MACpCC,aAAa,EAAE,IAAI;MACnBC,kBAAkB,EAAE,IAAI;MACxBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,MAAMA,KAAK;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}